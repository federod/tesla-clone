{"ast":null,"code":"var _jsxFileName = \"/Users/cyrax/Documents/GitHub/tesla-clone/src/components/Section.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Section = _ref => {\n  let {\n    title,\n    descirption,\n    leftButtonText,\n    rightButtonText,\n    backgroundImage\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    bgImage: backgroundImage,\n    children: [/*#__PURE__*/_jsxDEV(ItemText, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: descirption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(LeftButton, {\n          children: leftButtonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), rightButtonText && /*#__PURE__*/_jsxDEV(RightButton, {\n          children: rightButtonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DownArrow, {\n        src: \"/images/down-arrow.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Section;\nexport default Section;\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background-image: ${props => `url(${\"/images/\" + props.bgImage})`};'\n`;\n_c2 = Wrap;\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n`;\n_c3 = ItemText;\nconst ButtonGroup = styled.div`\n    display: flex;\n    margin-bottom: 30px;\n    @media (max-width: 768px) {\n        flex-direction: column;\n    } ;\n`;\n_c4 = ButtonGroup;\nconst LeftButton = styled.div`\n    background-color: rgba(23, 26, 32, 0.8);\n    height: 40px;\n    width: 256px;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppercase;\n    cursor: pointer;\n    margin: 14px;\n`;\n_c5 = LeftButton;\nconst RightButton = styled(LeftButton)`\n    background-color: rgba(244, 244, 244, 0.65);\n    color: black;\n`;\n_c6 = RightButton;\nconst DownArrow = styled.img`\n    height: 40px;\n    overflow-x: hidden;\n    animation: animateDown infinite 1.5s;\n    display: block;\n    margin: 0 auto;\n`;\n_c7 = DownArrow;\nconst Buttons = styled.div``;\n_c8 = Buttons;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"ItemText\");\n$RefreshReg$(_c4, \"ButtonGroup\");\n$RefreshReg$(_c5, \"LeftButton\");\n$RefreshReg$(_c6, \"RightButton\");\n$RefreshReg$(_c7, \"DownArrow\");\n$RefreshReg$(_c8, \"Buttons\");","map":{"version":3,"sources":["/Users/cyrax/Documents/GitHub/tesla-clone/src/components/Section.js"],"names":["React","styled","Section","title","descirption","leftButtonText","rightButtonText","backgroundImage","Wrap","div","props","bgImage","ItemText","ButtonGroup","LeftButton","RightButton","DownArrow","img","Buttons"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,OAAO,GAAG,QAMV;AAAA,MANW;AACbC,IAAAA,KADa;AAEbC,IAAAA,WAFa;AAGbC,IAAAA,cAHa;AAIbC,IAAAA,eAJa;AAKbC,IAAAA;AALa,GAMX;AACF,sBACI,QAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,eAAf;AAAA,4BACI,QAAC,QAAD;AAAA,8BACI;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,OAAD;AAAA,8BACI,QAAC,WAAD;AAAA,gCACI,QAAC,UAAD;AAAA,oBAAaC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKC,eAAe,iBACZ,QAAC,WAAD;AAAA,oBAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,SAAD;AAAW,QAAA,GAAG,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAxBD;;KAAMJ,O;AA0BN,eAAeA,OAAf;AAEA,MAAMM,IAAI,GAAGP,MAAM,CAACQ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAyBC,KAAD,IAAY,OAAM,aAAaA,KAAK,CAACC,OAAQ,GAAG;AACxE,CAXA;MAAMH,I;AAaN,MAAMI,QAAQ,GAAGX,MAAM,CAACQ,GAAI;AAC5B;AACA;AACA,CAHA;MAAMG,Q;AAKN,MAAMC,WAAW,GAAGZ,MAAM,CAACQ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMI,W;AAQN,MAAMC,UAAU,GAAGb,MAAM,CAACQ,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMK,U;AAgBN,MAAMC,WAAW,GAAGd,MAAM,CAACa,UAAD,CAAa;AACvC;AACA;AACA,CAHA;MAAMC,W;AAKN,MAAMC,SAAS,GAAGf,MAAM,CAACgB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,S;AAQN,MAAME,OAAO,GAAGjB,MAAM,CAACQ,GAAI,EAA3B;MAAMS,O","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Section = ({\n    title,\n    descirption,\n    leftButtonText,\n    rightButtonText,\n    backgroundImage,\n}) => {\n    return (\n        <Wrap bgImage={backgroundImage}>\n            <ItemText>\n                <h1>{title}</h1>\n                <p>{descirption}</p>\n            </ItemText>\n            <Buttons>\n                <ButtonGroup>\n                    <LeftButton>{leftButtonText}</LeftButton>\n                    {rightButtonText && (\n                        <RightButton>{rightButtonText}</RightButton>\n                    )}\n                </ButtonGroup>\n                <DownArrow src=\"/images/down-arrow.svg\" />\n            </Buttons>\n        </Wrap>\n    );\n};\n\nexport default Section;\n\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background-image: ${(props) => `url(${\"/images/\" + props.bgImage})`};'\n`;\n\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n`;\n\nconst ButtonGroup = styled.div`\n    display: flex;\n    margin-bottom: 30px;\n    @media (max-width: 768px) {\n        flex-direction: column;\n    } ;\n`;\n\nconst LeftButton = styled.div`\n    background-color: rgba(23, 26, 32, 0.8);\n    height: 40px;\n    width: 256px;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppercase;\n    cursor: pointer;\n    margin: 14px;\n`;\n\nconst RightButton = styled(LeftButton)`\n    background-color: rgba(244, 244, 244, 0.65);\n    color: black;\n`;\n\nconst DownArrow = styled.img`\n    height: 40px;\n    overflow-x: hidden;\n    animation: animateDown infinite 1.5s;\n    display: block;\n    margin: 0 auto;\n`;\n\nconst Buttons = styled.div``;\n"]},"metadata":{},"sourceType":"module"}